name: CI

on:
  push:
    branches: ['**']
  pull_request:

jobs:
  build:
    name: Build & Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Detect Node.js manifests
        id: node_manifests
        run: |
          package_json=$(git ls-files -- ':**/package.json')
          if [ -n "$package_json" ]; then
            echo "has_package=true" >> "$GITHUB_OUTPUT"
          else
            echo "has_package=false" >> "$GITHUB_OUTPUT"
          fi

          lock_files=$(git ls-files -- ':**/package-lock.json' ':**/npm-shrinkwrap.json' ':**/yarn.lock')
          if [ -n "$lock_files" ]; then
            echo "has_lock=true" >> "$GITHUB_OUTPUT"
          else
            echo "has_lock=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Set up Node.js
        if: steps.node_manifests.outputs.has_package == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Node.js dependencies
        if: steps.node_manifests.outputs.has_lock == 'true'
        run: npm ci

      - name: Skip Node.js install
        if: steps.node_manifests.outputs.has_package == 'true' && steps.node_manifests.outputs.has_lock != 'true'
        run: echo 'Node.js project detected without a lockfile. Skipping npm ci.'

      - name: Run lint
        if: steps.node_manifests.outputs.has_package == 'true'
        run: |
          if npm run | grep -q "lint"; then
            npm run lint
          else
            echo 'No lint script found in package.json. Skipping lint.'
          fi

      - name: Skip lint
        if: steps.node_manifests.outputs.has_package != 'true'
        run: echo 'No package.json found. Skipping lint.'

  test:
    name: Tests
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Detect Node.js manifests
        id: node_manifests
        run: |
          package_json=$(git ls-files -- ':**/package.json')
          if [ -n "$package_json" ]; then
            echo "has_package=true" >> "$GITHUB_OUTPUT"
          else
            echo "has_package=false" >> "$GITHUB_OUTPUT"
          fi

          lock_files=$(git ls-files -- ':**/package-lock.json' ':**/npm-shrinkwrap.json' ':**/yarn.lock')
          if [ -n "$lock_files" ]; then
            echo "has_lock=true" >> "$GITHUB_OUTPUT"
          else
            echo "has_lock=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Set up Node.js
        if: steps.node_manifests.outputs.has_package == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Node.js dependencies
        if: steps.node_manifests.outputs.has_lock == 'true'
        run: npm ci

      - name: Skip Node.js install
        if: steps.node_manifests.outputs.has_package == 'true' && steps.node_manifests.outputs.has_lock != 'true'
        run: echo 'Node.js project detected without a lockfile. Skipping npm ci.'

      - name: Run tests
        if: steps.node_manifests.outputs.has_package == 'true'
        run: |
          if npm run | grep -q " test"; then
            npm test -- --watch=false || npm test
          else
            echo 'No test script found in package.json. Skipping tests.'
          fi

      - name: Skip tests
        if: steps.node_manifests.outputs.has_package != 'true'
        run: echo 'No package.json found. Skipping tests.'

  security_scan:
    name: Security Scan
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Detect Node.js manifests
        id: node_manifests
        run: |
          package_json=$(git ls-files -- ':**/package.json')
          if [ -n "$package_json" ]; then
            echo "has_package=true" >> "$GITHUB_OUTPUT"
          else
            echo "has_package=false" >> "$GITHUB_OUTPUT"
          fi

          lock_files=$(git ls-files -- ':**/package-lock.json' ':**/npm-shrinkwrap.json' ':**/yarn.lock')
          if [ -n "$lock_files" ]; then
            echo "has_lock=true" >> "$GITHUB_OUTPUT"
          else
            echo "has_lock=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Set up Node.js
        if: steps.node_manifests.outputs.has_package == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Node.js dependencies
        if: steps.node_manifests.outputs.has_lock == 'true'
        run: npm ci

      - name: Skip Node.js install
        if: steps.node_manifests.outputs.has_package == 'true' && steps.node_manifests.outputs.has_lock != 'true'
        run: echo 'Node.js project detected without a lockfile. Skipping npm ci.'

      - name: Run npm audit
        if: steps.node_manifests.outputs.has_lock == 'true'
        run: npm audit --production

      - name: Skip npm audit
        if: steps.node_manifests.outputs.has_lock != 'true'
        run: echo 'No Node.js lockfile found. Skipping npm audit.'

