global:
  scrape_interval: 30s
  evaluation_interval: 30s

prometheus:
  prometheusSpec:
    retention: 15d
    retentionSize: 50GiB
    resources:
      requests:
        cpu: 500m
        memory: 1Gi
      limits:
        cpu: 1
        memory: 2Gi
    serviceMonitorSelectorNilUsesHelmValues: false
    podMonitorSelectorNilUsesHelmValues: false
    ruleSelectorNilUsesHelmValues: false
    additionalPrometheusRulesMap:
      data-pipelines:
        groups:
          - name: data-pipeline-health
            rules:
              - alert: AirflowDAGFailures
                expr: increase(airflow_dag_run_failed{dag_id=~"meetinity_.*"}[30m]) > 0
                for: 10m
                labels:
                  severity: high
                  team: data-platform
                annotations:
                  summary: Airflow DAG failures detected
                  description: Airflow reported at least one failed run for a Meetinity DAG in the last 30 minutes. Investigate logs in Airflow.
              - alert: DataPipelineFreshnessSLO
                expr: increase(airflow_dag_run_success{dag_id="meetinity_daily_ingestion"}[2h]) == 0
                for: 15m
                labels:
                  severity: critical
                  team: data-platform
                annotations:
                  summary: Daily ingestion DAG has not succeeded within the last 2 hours
                  description: The meetinity_daily_ingestion DAG has not completed successfully within the freshness SLO window.
              - alert: DbtBuildFailures
                expr: increase(dbt_build_status_total{status="error"}[1h]) > 0
                for: 5m
                labels:
                  severity: high
                  team: data-platform
                annotations:
                  summary: dbt build failures detected
                  description: dbt builds for Meetinity analytics models are failing. Review the dbt Cloud or CI logs.
    additionalScrapeConfigs:
      - job_name: kubernetes-pods
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            target_label: __address__
            regex: (.+)
            replacement: $1
alertmanager:
  enabled: true
  alertmanagerSpec:
    replicas: 2
    resources:
      requests:
        cpu: 200m
        memory: 256Mi
      limits:
        cpu: 500m
        memory: 512Mi
    configSecret: alertmanager-config

kubeScheduler:
  serviceMonitor:
    interval: 30s
kubeControllerManager:
  serviceMonitor:
    interval: 30s

nodeExporter:
  enabled: true

grafana:
  enabled: false
