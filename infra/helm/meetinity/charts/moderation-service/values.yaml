environment: dev
domain: meetinity.com

replicaCount: 2

image:
  repository: ghcr.io/meetinity/moderation-service
  tag: "latest"
  pullPolicy: IfNotPresent

serviceAccount:
  create: true
  name: ""

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  className: nginx
  annotations: {}
  subdomain: moderation
  tlsSecretName: moderation-service-tls
  paths:
    - path: /
      pathType: Prefix

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 5
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 60
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 70

podDisruptionBudget:
  enabled: true
  minAvailable: 1

resources:
  requests:
    cpu: 150m
    memory: 256Mi
  limits:
    cpu: 400m
    memory: 512Mi

env:
  - name: FLASK_ENV
    value: production
  - name: KAFKA_MODERATION_TOPIC
    value: moderation.events

configMaps: []
sealedSecrets: []
vaultSecrets: []

livenessProbe:
  path: /health
  port: http

readinessProbe:
  path: /health
  port: http

observability:
  tracing:
    enabled: true
    serviceName: moderation-service
    sampler:
      type: parentbased_traceidratio
      ratio: 0.25
    exporter:
      endpoint: "http://jaeger-collector.observability.svc.cluster.local:4317"
      protocol: grpc
    resourceAttributes:
      service.domain: moderation
    agent:
      enabled: false
