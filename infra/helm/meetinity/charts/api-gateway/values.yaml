environment: dev
domain: meetinity.com

replicaCount: 2

image:
  repository: ghcr.io/meetinity/api-gateway
  tag: "latest"
  pullPolicy: IfNotPresent

serviceAccount:
  create: true
  name: ""

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: true
  className: nginx
  annotations: {}
  subdomain: api
  tlsSecretName: api-gateway-tls
  paths:
    - path: /
      pathType: Prefix

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 6
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
        - type: Percent
          value: 100
          periodSeconds: 60
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 100
          periodSeconds: 300

podDisruptionBudget:
  enabled: true
  minAvailable: 1

resources:
  requests:
    cpu: 200m
    memory: 256Mi
  limits:
    cpu: 500m
    memory: 512Mi

vpa:
  enabled: false
  updatePolicy:
    updateMode: "Off"
  resourcePolicy:
    containerPolicies:
      - containerName: "*"
        minAllowed:
          cpu: 150m
          memory: 256Mi
        maxAllowed:
          cpu: 2
          memory: 2Gi

env:
  - name: GRAPHQL_FEDERATION_ENABLED
    value: "false"
  - name: GRAPHQL_ROUTER_URL
    value: ""
  - name: GRAPHQL_SUBGRAPHS
    value: ""

configMaps: []
sealedSecrets: []
vaultSecrets: []

livenessProbe:
  path: /healthz
  port: http

readinessProbe:
  path: /ready
  port: http

observability:
  tracing:
    enabled: true
    serviceName: api-gateway
    propagators:
      - tracecontext
      - baggage
      - b3multi
    sampler:
      type: parentbased_traceidratio
      ratio: 0.2
    exporter:
      endpoint: "http://jaeger-collector.observability.svc.cluster.local:4317"
      protocol: grpc
      headers: {}
    resourceAttributes:
      service.team: platform
    agent:
      enabled: true
