{{- $root := . }}
{{- $baseLabels := (include "meetinity.labels" $root | fromYaml) }}
{{- $defaultStore := dict }}
{{- if and $root.Values.global (hasKey $root.Values.global "secretStores") }}
{{- $defaultStore = (index $root.Values.global.secretStores "default" | default (dict)) }}
{{- end }}
{{- range $secret := ($root.Values.shared.sealedSecrets | default list) }}
{{- $labels := merge (dict) $baseLabels ($secret.labels | default (dict)) }}
{{ include "common.sealedSecret" (dict "name" (printf "%s-%s" (include "meetinity.fullname" $root) $secret.name) "namespace" $secret.namespace "labels" $labels "annotations" ($secret.annotations | default (dict)) "encryptedData" $secret.encryptedData "type" $secret.type) }}
---
{{- end }}
{{- range $secret := ($root.Values.shared.vaultSecrets | default list) }}
{{- $labels := merge (dict) $baseLabels ($secret.labels | default (dict)) }}
{{- $store := default $defaultStore $secret.secretStoreRef }}
{{ include "common.externalSecret" (dict "name" (printf "%s-%s" (include "meetinity.fullname" $root) $secret.name) "namespace" $secret.namespace "labels" $labels "annotations" ($secret.annotations | default (dict)) "refreshInterval" $secret.refreshInterval "secretStoreRef" $store "target" $secret.target "data" $secret.data "dataFrom" $secret.dataFrom "path" $secret.path) }}
---
{{- end }}
