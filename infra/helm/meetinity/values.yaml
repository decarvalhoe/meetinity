global:
  environment: ""
  domain: meetinity.com
  secretStores:
    default:
      name: meetinity-vault
      kind: ClusterSecretStore
      spec:
        provider:
          vault:
            server: https://vault.{{ .Values.global.environment | default "shared" }}.meetinity.com
            path: kv
            version: v2
            namespace: ""
            caBundle: ""
            auth:
              kubernetes:
                mountPath: kubernetes
                role: meetinity-{{ .Values.global.environment | default "shared" }}
                serviceAccountRef:
                  name: external-secrets
                  namespace: security
  database:
    secretName: meetinity-shared-database
    secretKeys:
      host: host
      readerHost: reader_host
      port: port
      name: database
      username: username
      password: password
      url: url
      readerUrl: reader_url
  redis:
    secretName: meetinity-shared-redis
    secretKeys:
      host: host
      readerHost: reader_host
      port: port
      username: username
      password: password
      url: url
      readerUrl: reader_url
  observability:
    tracing:
      enabled: false
      serviceName: ""
      propagators:
        - tracecontext
        - baggage
      sampler:
        type: parentbased_traceidratio
        ratio: 1.0
      exporter:
        endpoint: "http://jaeger-collector.observability.svc.cluster.local:4317"
        protocol: grpc
        headers: {}
      resourceAttributes: {}
      agent:
        enabled: false
        name: jaeger-agent
        image:
          repository: jaegertracing/jaeger-agent
          tag: "1.52.0"
          pullPolicy: IfNotPresent
        collector:
          host: jaeger-collector.observability.svc.cluster.local
          port: 14250
          protocol: grpc
        ports:
          - name: jaeger-udp-compact
            containerPort: 6831
            protocol: UDP
          - name: jaeger-udp-binary
            containerPort: 6832
            protocol: UDP
        env: []
        extraArgs: []
        resources: {}
        extraVolumeMounts: []
        extraVolumes: []
        livenessProbe: {}
        readinessProbe: {}

shared:
  configMaps:
    platform-settings:
      annotations: {}
      data:
        FEATURE_FLAGS: "false"
        DEFAULT_TIMEZONE: "UTC"
    analytics-dashboard:
      labels:
        grafana_dashboard: "1"
      data:
        analytics-overview.json: |
          {
            "annotations": {
              "list": [
                {
                  "builtIn": 1,
                  "datasource": { "type": "grafana", "uid": "-- Grafana --" },
                  "enable": true,
                  "hide": true,
                  "iconColor": "rgba(0, 211, 255, 1)",
                  "name": "Annotations & Alerts",
                  "type": "dashboard"
                }
              ]
            },
            "editable": true,
            "graphTooltip": 0,
            "panels": [
              {
                "datasource": { "type": "prometheus", "uid": "prometheus" },
                "fieldConfig": {
                  "defaults": { "unit": "ops" },
                  "overrides": []
                },
                "gridPos": { "h": 8, "w": 12, "x": 0, "y": 0 },
                "targets": [
                  {
                    "expr": "sum(rate(analytics_events_ingested_total[5m]))",
                    "legendFormat": "events/min",
                    "refId": "A"
                  }
                ],
                "title": "Events Ingested",
                "type": "timeseries"
              },
              {
                "datasource": { "type": "prometheus", "uid": "prometheus" },
                "fieldConfig": {
                  "defaults": { "unit": "s" },
                  "overrides": []
                },
                "gridPos": { "h": 8, "w": 12, "x": 12, "y": 0 },
                "targets": [
                  {
                    "expr": "histogram_quantile(0.95, sum(rate(analytics_event_ingest_latency_seconds_bucket[5m])) by (le))",
                    "legendFormat": "latency",
                    "refId": "A"
                  }
                ],
                "title": "Ingestion Latency (p95)",
                "type": "timeseries"
              },
              {
                "datasource": { "type": "prometheus", "uid": "prometheus" },
                "fieldConfig": {
                  "defaults": {
                    "thresholds": {
                      "mode": "absolute",
                      "steps": [
                        { "color": "green", "value": null },
                        { "color": "orange", "value": 1800 },
                        { "color": "red", "value": 3600 }
                      ]
                    },
                    "unit": "s"
                  },
                  "overrides": []
                },
                "gridPos": { "h": 6, "w": 6, "x": 0, "y": 8 },
                "options": {
                  "reduceOptions": {
                    "calcs": ["lastNotNull"],
                    "fields": "",
                    "values": false
                  }
                },
                "targets": [
                  {
                    "expr": "time() - analytics_warehouse_last_success_epoch",
                    "legendFormat": "age",
                    "refId": "A"
                  }
                ],
                "title": "Last Warehouse Refresh",
                "type": "stat"
              },
              {
                "datasource": { "type": "prometheus", "uid": "prometheus" },
                "fieldConfig": {
                  "defaults": { "unit": "short" },
                  "overrides": []
                },
                "gridPos": { "h": 6, "w": 6, "x": 6, "y": 8 },
                "options": {
                  "reduceOptions": {
                    "calcs": ["lastNotNull"],
                    "fields": "",
                    "values": false
                  }
                },
                "targets": [
                  {
                    "expr": "increase(analytics_warehouse_rows_total[24h])",
                    "legendFormat": "rows",
                    "refId": "A"
                  }
                ],
                "title": "Warehouse Rows Materialised",
                "type": "stat"
              }
            ],
            "refresh": "5m",
            "schemaVersion": 38,
            "style": "dark",
            "tags": ["analytics"],
            "templating": { "list": [] },
            "time": { "from": "now-24h", "to": "now" },
            "timepicker": {},
            "timezone": ""
          }
  sealedSecrets: []
  vaultSecrets:
    - name: shared-database
      path: "kv/data/{{ .Values.global.environment }}/shared/database"
      target:
        name: meetinity-shared-database
        creationPolicy: Owner
        template:
          type: Opaque
    - name: shared-redis
      path: "kv/data/{{ .Values.global.environment }}/shared/redis"
      target:
        name: meetinity-shared-redis
        creationPolicy: Owner
        template:
          type: Opaque
